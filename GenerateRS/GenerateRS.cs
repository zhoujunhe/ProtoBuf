// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GenerateRS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GenerateRS.proto</summary>
public static partial class GenerateRSReflection {

  #region Descriptor
  /// <summary>File descriptor for GenerateRS.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GenerateRSReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBHZW5lcmF0ZVJTLnByb3RvIuACChBSZW1vdGVEZXZpY2VJbmZvEg8KB3Jx",
          "X3NpemUYASABKA0SDwoHcnFfZGF0YRgCIAEoDBITCgtycV9zaWdfc2l6ZRgD",
          "IAEoDRITCgtycV9zaWdfZGF0YRgEIAEoDBIZChFncmFwcGFfc2Vzc2lvbl9p",
          "ZBgFIAEoDRIhChlrZXlfZmFpcl9wbGF5X2d1aWRfbGVuZ3RoGAYgASgNEhoK",
          "EmtleV9mYWlyX3BsYXlfZ3VpZBgHIAEoDBIkChxmYWlyX3BsYXlfY2VydGlm",
          "aWNhdGVfbGVuZ3RoGAggASgNEh0KFWZhaXJfcGxheV9jZXJ0aWZpY2F0ZRgJ",
          "IAEoDBIYChBmYWlyX2RldmljZV90eXBlGAogASgDEhMKC3ByaXZhdGVfa2V5",
          "GAsgASgNEhoKEmZhaXJfcGxheV9ndWlkX2xlbhgMIAEoDRIWCg5mYWlyX3Bs",
          "YXlfZ3VpZBgNIAEoCSIqCgZyc2RhdGESDwoHcnNfc2l6ZRgBIAEoDRIPCgdy",
          "c19kYXRhGAIgASgMMjEKA2FpZBIqCgpHZW5lcmF0ZVJTEhEuUmVtb3RlRGV2",
          "aWNlSW5mbxoHLnJzZGF0YSIAYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RemoteDeviceInfo), global::RemoteDeviceInfo.Parser, new[]{ "RqSize", "RqData", "RqSigSize", "RqSigData", "GrappaSessionId", "KeyFairPlayGuidLength", "KeyFairPlayGuid", "FairPlayCertificateLength", "FairPlayCertificate", "FairDeviceType", "PrivateKey", "FairPlayGuidLen", "FairPlayGuid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::rsdata), global::rsdata.Parser, new[]{ "RsSize", "RsData" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// The request message 
/// </summary>
public sealed partial class RemoteDeviceInfo : pb::IMessage<RemoteDeviceInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RemoteDeviceInfo> _parser = new pb::MessageParser<RemoteDeviceInfo>(() => new RemoteDeviceInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<RemoteDeviceInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GenerateRSReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RemoteDeviceInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RemoteDeviceInfo(RemoteDeviceInfo other) : this() {
    rqSize_ = other.rqSize_;
    rqData_ = other.rqData_;
    rqSigSize_ = other.rqSigSize_;
    rqSigData_ = other.rqSigData_;
    grappaSessionId_ = other.grappaSessionId_;
    keyFairPlayGuidLength_ = other.keyFairPlayGuidLength_;
    keyFairPlayGuid_ = other.keyFairPlayGuid_;
    fairPlayCertificateLength_ = other.fairPlayCertificateLength_;
    fairPlayCertificate_ = other.fairPlayCertificate_;
    fairDeviceType_ = other.fairDeviceType_;
    privateKey_ = other.privateKey_;
    fairPlayGuidLen_ = other.fairPlayGuidLen_;
    fairPlayGuid_ = other.fairPlayGuid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RemoteDeviceInfo Clone() {
    return new RemoteDeviceInfo(this);
  }

  /// <summary>Field number for the "rq_size" field.</summary>
  public const int RqSizeFieldNumber = 1;
  private uint rqSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RqSize {
    get { return rqSize_; }
    set {
      rqSize_ = value;
    }
  }

  /// <summary>Field number for the "rq_data" field.</summary>
  public const int RqDataFieldNumber = 2;
  private pb::ByteString rqData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString RqData {
    get { return rqData_; }
    set {
      rqData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "rq_sig_size" field.</summary>
  public const int RqSigSizeFieldNumber = 3;
  private uint rqSigSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RqSigSize {
    get { return rqSigSize_; }
    set {
      rqSigSize_ = value;
    }
  }

  /// <summary>Field number for the "rq_sig_data" field.</summary>
  public const int RqSigDataFieldNumber = 4;
  private pb::ByteString rqSigData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString RqSigData {
    get { return rqSigData_; }
    set {
      rqSigData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "grappa_session_id" field.</summary>
  public const int GrappaSessionIdFieldNumber = 5;
  private uint grappaSessionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GrappaSessionId {
    get { return grappaSessionId_; }
    set {
      grappaSessionId_ = value;
    }
  }

  /// <summary>Field number for the "key_fair_play_guid_length" field.</summary>
  public const int KeyFairPlayGuidLengthFieldNumber = 6;
  private uint keyFairPlayGuidLength_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint KeyFairPlayGuidLength {
    get { return keyFairPlayGuidLength_; }
    set {
      keyFairPlayGuidLength_ = value;
    }
  }

  /// <summary>Field number for the "key_fair_play_guid" field.</summary>
  public const int KeyFairPlayGuidFieldNumber = 7;
  private pb::ByteString keyFairPlayGuid_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString KeyFairPlayGuid {
    get { return keyFairPlayGuid_; }
    set {
      keyFairPlayGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fair_play_certificate_length" field.</summary>
  public const int FairPlayCertificateLengthFieldNumber = 8;
  private uint fairPlayCertificateLength_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FairPlayCertificateLength {
    get { return fairPlayCertificateLength_; }
    set {
      fairPlayCertificateLength_ = value;
    }
  }

  /// <summary>Field number for the "fair_play_certificate" field.</summary>
  public const int FairPlayCertificateFieldNumber = 9;
  private pb::ByteString fairPlayCertificate_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString FairPlayCertificate {
    get { return fairPlayCertificate_; }
    set {
      fairPlayCertificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fair_device_type" field.</summary>
  public const int FairDeviceTypeFieldNumber = 10;
  private long fairDeviceType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long FairDeviceType {
    get { return fairDeviceType_; }
    set {
      fairDeviceType_ = value;
    }
  }

  /// <summary>Field number for the "private_key" field.</summary>
  public const int PrivateKeyFieldNumber = 11;
  private uint privateKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PrivateKey {
    get { return privateKey_; }
    set {
      privateKey_ = value;
    }
  }

  /// <summary>Field number for the "fair_play_guid_len" field.</summary>
  public const int FairPlayGuidLenFieldNumber = 12;
  private uint fairPlayGuidLen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FairPlayGuidLen {
    get { return fairPlayGuidLen_; }
    set {
      fairPlayGuidLen_ = value;
    }
  }

  /// <summary>Field number for the "fair_play_guid" field.</summary>
  public const int FairPlayGuidFieldNumber = 13;
  private string fairPlayGuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FairPlayGuid {
    get { return fairPlayGuid_; }
    set {
      fairPlayGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as RemoteDeviceInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(RemoteDeviceInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RqSize != other.RqSize) return false;
    if (RqData != other.RqData) return false;
    if (RqSigSize != other.RqSigSize) return false;
    if (RqSigData != other.RqSigData) return false;
    if (GrappaSessionId != other.GrappaSessionId) return false;
    if (KeyFairPlayGuidLength != other.KeyFairPlayGuidLength) return false;
    if (KeyFairPlayGuid != other.KeyFairPlayGuid) return false;
    if (FairPlayCertificateLength != other.FairPlayCertificateLength) return false;
    if (FairPlayCertificate != other.FairPlayCertificate) return false;
    if (FairDeviceType != other.FairDeviceType) return false;
    if (PrivateKey != other.PrivateKey) return false;
    if (FairPlayGuidLen != other.FairPlayGuidLen) return false;
    if (FairPlayGuid != other.FairPlayGuid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (RqSize != 0) hash ^= RqSize.GetHashCode();
    if (RqData.Length != 0) hash ^= RqData.GetHashCode();
    if (RqSigSize != 0) hash ^= RqSigSize.GetHashCode();
    if (RqSigData.Length != 0) hash ^= RqSigData.GetHashCode();
    if (GrappaSessionId != 0) hash ^= GrappaSessionId.GetHashCode();
    if (KeyFairPlayGuidLength != 0) hash ^= KeyFairPlayGuidLength.GetHashCode();
    if (KeyFairPlayGuid.Length != 0) hash ^= KeyFairPlayGuid.GetHashCode();
    if (FairPlayCertificateLength != 0) hash ^= FairPlayCertificateLength.GetHashCode();
    if (FairPlayCertificate.Length != 0) hash ^= FairPlayCertificate.GetHashCode();
    if (FairDeviceType != 0L) hash ^= FairDeviceType.GetHashCode();
    if (PrivateKey != 0) hash ^= PrivateKey.GetHashCode();
    if (FairPlayGuidLen != 0) hash ^= FairPlayGuidLen.GetHashCode();
    if (FairPlayGuid.Length != 0) hash ^= FairPlayGuid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RqSize != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(RqSize);
    }
    if (RqData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(RqData);
    }
    if (RqSigSize != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(RqSigSize);
    }
    if (RqSigData.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(RqSigData);
    }
    if (GrappaSessionId != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(GrappaSessionId);
    }
    if (KeyFairPlayGuidLength != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(KeyFairPlayGuidLength);
    }
    if (KeyFairPlayGuid.Length != 0) {
      output.WriteRawTag(58);
      output.WriteBytes(KeyFairPlayGuid);
    }
    if (FairPlayCertificateLength != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(FairPlayCertificateLength);
    }
    if (FairPlayCertificate.Length != 0) {
      output.WriteRawTag(74);
      output.WriteBytes(FairPlayCertificate);
    }
    if (FairDeviceType != 0L) {
      output.WriteRawTag(80);
      output.WriteInt64(FairDeviceType);
    }
    if (PrivateKey != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(PrivateKey);
    }
    if (FairPlayGuidLen != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(FairPlayGuidLen);
    }
    if (FairPlayGuid.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(FairPlayGuid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RqSize != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(RqSize);
    }
    if (RqData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(RqData);
    }
    if (RqSigSize != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(RqSigSize);
    }
    if (RqSigData.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(RqSigData);
    }
    if (GrappaSessionId != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(GrappaSessionId);
    }
    if (KeyFairPlayGuidLength != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(KeyFairPlayGuidLength);
    }
    if (KeyFairPlayGuid.Length != 0) {
      output.WriteRawTag(58);
      output.WriteBytes(KeyFairPlayGuid);
    }
    if (FairPlayCertificateLength != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(FairPlayCertificateLength);
    }
    if (FairPlayCertificate.Length != 0) {
      output.WriteRawTag(74);
      output.WriteBytes(FairPlayCertificate);
    }
    if (FairDeviceType != 0L) {
      output.WriteRawTag(80);
      output.WriteInt64(FairDeviceType);
    }
    if (PrivateKey != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(PrivateKey);
    }
    if (FairPlayGuidLen != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(FairPlayGuidLen);
    }
    if (FairPlayGuid.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(FairPlayGuid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (RqSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RqSize);
    }
    if (RqData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(RqData);
    }
    if (RqSigSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RqSigSize);
    }
    if (RqSigData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(RqSigData);
    }
    if (GrappaSessionId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GrappaSessionId);
    }
    if (KeyFairPlayGuidLength != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeyFairPlayGuidLength);
    }
    if (KeyFairPlayGuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(KeyFairPlayGuid);
    }
    if (FairPlayCertificateLength != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FairPlayCertificateLength);
    }
    if (FairPlayCertificate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(FairPlayCertificate);
    }
    if (FairDeviceType != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FairDeviceType);
    }
    if (PrivateKey != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrivateKey);
    }
    if (FairPlayGuidLen != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FairPlayGuidLen);
    }
    if (FairPlayGuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FairPlayGuid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(RemoteDeviceInfo other) {
    if (other == null) {
      return;
    }
    if (other.RqSize != 0) {
      RqSize = other.RqSize;
    }
    if (other.RqData.Length != 0) {
      RqData = other.RqData;
    }
    if (other.RqSigSize != 0) {
      RqSigSize = other.RqSigSize;
    }
    if (other.RqSigData.Length != 0) {
      RqSigData = other.RqSigData;
    }
    if (other.GrappaSessionId != 0) {
      GrappaSessionId = other.GrappaSessionId;
    }
    if (other.KeyFairPlayGuidLength != 0) {
      KeyFairPlayGuidLength = other.KeyFairPlayGuidLength;
    }
    if (other.KeyFairPlayGuid.Length != 0) {
      KeyFairPlayGuid = other.KeyFairPlayGuid;
    }
    if (other.FairPlayCertificateLength != 0) {
      FairPlayCertificateLength = other.FairPlayCertificateLength;
    }
    if (other.FairPlayCertificate.Length != 0) {
      FairPlayCertificate = other.FairPlayCertificate;
    }
    if (other.FairDeviceType != 0L) {
      FairDeviceType = other.FairDeviceType;
    }
    if (other.PrivateKey != 0) {
      PrivateKey = other.PrivateKey;
    }
    if (other.FairPlayGuidLen != 0) {
      FairPlayGuidLen = other.FairPlayGuidLen;
    }
    if (other.FairPlayGuid.Length != 0) {
      FairPlayGuid = other.FairPlayGuid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RqSize = input.ReadUInt32();
          break;
        }
        case 18: {
          RqData = input.ReadBytes();
          break;
        }
        case 24: {
          RqSigSize = input.ReadUInt32();
          break;
        }
        case 34: {
          RqSigData = input.ReadBytes();
          break;
        }
        case 40: {
          GrappaSessionId = input.ReadUInt32();
          break;
        }
        case 48: {
          KeyFairPlayGuidLength = input.ReadUInt32();
          break;
        }
        case 58: {
          KeyFairPlayGuid = input.ReadBytes();
          break;
        }
        case 64: {
          FairPlayCertificateLength = input.ReadUInt32();
          break;
        }
        case 74: {
          FairPlayCertificate = input.ReadBytes();
          break;
        }
        case 80: {
          FairDeviceType = input.ReadInt64();
          break;
        }
        case 88: {
          PrivateKey = input.ReadUInt32();
          break;
        }
        case 96: {
          FairPlayGuidLen = input.ReadUInt32();
          break;
        }
        case 106: {
          FairPlayGuid = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RqSize = input.ReadUInt32();
          break;
        }
        case 18: {
          RqData = input.ReadBytes();
          break;
        }
        case 24: {
          RqSigSize = input.ReadUInt32();
          break;
        }
        case 34: {
          RqSigData = input.ReadBytes();
          break;
        }
        case 40: {
          GrappaSessionId = input.ReadUInt32();
          break;
        }
        case 48: {
          KeyFairPlayGuidLength = input.ReadUInt32();
          break;
        }
        case 58: {
          KeyFairPlayGuid = input.ReadBytes();
          break;
        }
        case 64: {
          FairPlayCertificateLength = input.ReadUInt32();
          break;
        }
        case 74: {
          FairPlayCertificate = input.ReadBytes();
          break;
        }
        case 80: {
          FairDeviceType = input.ReadInt64();
          break;
        }
        case 88: {
          PrivateKey = input.ReadUInt32();
          break;
        }
        case 96: {
          FairPlayGuidLen = input.ReadUInt32();
          break;
        }
        case 106: {
          FairPlayGuid = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// The response message 
/// </summary>
public sealed partial class rsdata : pb::IMessage<rsdata>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<rsdata> _parser = new pb::MessageParser<rsdata>(() => new rsdata());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<rsdata> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GenerateRSReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public rsdata() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public rsdata(rsdata other) : this() {
    rsSize_ = other.rsSize_;
    rsData_ = other.rsData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public rsdata Clone() {
    return new rsdata(this);
  }

  /// <summary>Field number for the "rs_size" field.</summary>
  public const int RsSizeFieldNumber = 1;
  private uint rsSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RsSize {
    get { return rsSize_; }
    set {
      rsSize_ = value;
    }
  }

  /// <summary>Field number for the "rs_data" field.</summary>
  public const int RsDataFieldNumber = 2;
  private pb::ByteString rsData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString RsData {
    get { return rsData_; }
    set {
      rsData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as rsdata);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(rsdata other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RsSize != other.RsSize) return false;
    if (RsData != other.RsData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (RsSize != 0) hash ^= RsSize.GetHashCode();
    if (RsData.Length != 0) hash ^= RsData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RsSize != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(RsSize);
    }
    if (RsData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(RsData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RsSize != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(RsSize);
    }
    if (RsData.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(RsData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (RsSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RsSize);
    }
    if (RsData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(RsData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(rsdata other) {
    if (other == null) {
      return;
    }
    if (other.RsSize != 0) {
      RsSize = other.RsSize;
    }
    if (other.RsData.Length != 0) {
      RsData = other.RsData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RsSize = input.ReadUInt32();
          break;
        }
        case 18: {
          RsData = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RsSize = input.ReadUInt32();
          break;
        }
        case 18: {
          RsData = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
